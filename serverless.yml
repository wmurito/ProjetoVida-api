service: projeto-vida-api
frameworkVersion: '4'

provider:
  name: aws
  runtime: python3.11
  architecture: x86_64 
  region: us-east-1
  stage: ${opt:stage, 'prod'}
  memorySize: 512
  timeout: 29

  environment:
    S3_BUCKET: projeto-vida-prd
    S3_KEY_PREFIX: dashboard_files
    DB_SECRET_NAME: projeto-vida/database
    COGNITO_SECRET_NAME: projeto-vida/cognito
    STAGE: ${self:provider.stage}

  iam:
    role:
      statements:
        # Permissões de S3
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:HeadObject
          Resource: arn:aws:s3:::projeto-vida-prd/*

        # Permissões de Secrets Manager
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: arn:aws:secretsmanager:${self:provider.region}:*:secret:projeto-vida/*

        # Permissões para a Lambda conectar à VPC
        - Effect: Allow
          Action:
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            - ec2:AssignPrivateIpAddresses
            - ec2:UnassignPrivateIpAddresses
          Resource: "*"

        # Permissões de CloudWatch Logs
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

  vpc:
    securityGroupIds:
      - sg-010ebae9343e8f422
    subnetIds:
      - subnet-0fcb4e5a4433397c3
      - subnet-045bdd15a0355fdbc

custom:
  pythonRequirements:
    fileName: requirements-lambda.txt
    dockerizePip: true
    dockerImage: public.ecr.aws/sam/build-python3.11:latest
    slim: true
    strip: false
    layer: true
    pipCmdExtraArgs:
      - --no-cache-dir
      - --compile
      - --force-reinstall
    noDeps: false
    noDeploy: false

functions:
  api:
    handler: main.handler
    name: ProjetoVidaAPI
    description: API principal do Projeto Vida (FastAPI)
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - httpApi:
          path: /
          method: ANY
      - httpApi:
          path: /{proxy+}
          method: ANY

plugins:
  - serverless-python-requirements

package:
  individually: false
  patterns:
    - '!node_modules/**'
    - '!venv/**'
    - '!.venv/**'
    - '!__pycache__/**'
    - '!*.pyc'
    - '!.git/**'
    - '!*.md'
    - '!tests/**'
    - '!*.zip'
    - '!*.ps1'
    - '!*.sh'
    - '!requirements.txt'
    - '!requirements-dev.txt'
    - '!*.log'
    - '!.pytest_cache/**'
    - '!coverage/**'
    - '!.coverage'
    - '!htmlcov/**'
    - '!.tox/**'
    - '!.mypy_cache/**'
    - '!.DS_Store'
    - '!Thumbs.db'
    - '!cleanup.ps1'
    - '!migrate_to_postgresql.py'
