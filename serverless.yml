service: projeto-vida-api

frameworkVersion: '4'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  memorySize: 256  # Otimizado para baixo custo
  timeout: 10      # Reduzido para economia
  architecture: arm64  # Graviton2 - 20% mais barato
  
  vpc:
    securityGroupIds:
      - ${param:securityGroupId}
    subnetIds:
      - ${param:subnetId1}
      - ${param:subnetId2}
  
  environment:
    S3_BUCKET: ${param:s3Bucket, 'projeto-vida-prd'}
    S3_KEY_PREFIX: ${param:s3KeyPrefix, 'dashboard_files'}
    DB_SECRET_NAME: ${param:dbSecretName, 'projeto-vida/database'}
    COGNITO_SECRET_NAME: ${param:cognitoSecretName, 'projeto-vida/cognito'}
    POWERTOOLS_SERVICE_NAME: projeto-vida
    LOG_LEVEL: INFO
  iam:
    role:
      statements:
        # Permissões para S3
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
        
        # Permissões para Secrets Manager
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: 
            - "arn:aws:secretsmanager:${self:provider.region}:*:secret:${self:provider.environment.DB_SECRET_NAME}*"
            - "arn:aws:secretsmanager:${self:provider.region}:*:secret:${self:provider.environment.COGNITO_SECRET_NAME}*"
        
        # Permissões para CloudWatch Logs
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "arn:aws:logs:${self:provider.region}:*:log-group:/aws/lambda/*"
        
        # Permissões para VPC (acesso ao RDS)
        - Effect: Allow
          Action:
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            - ec2:AssignPrivateIpAddresses
            - ec2:UnassignPrivateIpAddresses
          Resource: "*"

functions:
  api:
    handler: main.handler
    description: API ProjetoVida - Produção
    reservedConcurrency: 5  # Limita custos
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
          cors:
            allowedOrigins:
              - '*'
            allowedHeaders:
              - Content-Type
              - Authorization
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
  
  dashboard:
    handler: lambda_dashboard.lambda_handler
    description: Dashboard ProjetoVida - Sob demanda
    memorySize: 512  # Dashboard precisa mais memória
    timeout: 60
    reservedConcurrency: 1

plugins:
  - serverless-python-requirements

package:
  individually: false
  patterns:
    - '!.venv/**'
    - '!.venv-new/**'
    - '!node_modules/**'
    - '!.git/**'
    - '!.github/**'
    - '!.pytest_cache/**'
    - '!__pycache__/**'
    - '!*.pyc'
    - '!.env*'
    - '!tests/**'
    - '!*.md'
    - '!*.ps1'
    - '!*.sh'
    - '!Dockerfile'
    - '!docker-compose.yml'
    - '!.gitignore'
    - '!.pre-commit-config.yaml'

custom:
  pythonRequirements:
    fileName: requirements-lambda.txt
    dockerizePip: true
    dockerImage: public.ecr.aws/sam/build-python3.9:latest-arm64
    slim: true
    strip: false
    zip: true
    useDownloadCache: true
    useStaticCache: true
    cacheLocation: ./.serverless/cache
    noDeploy:
      - boto3
      - botocore
      - awscli
      - pip
      - setuptools
      - wheel