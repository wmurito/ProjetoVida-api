name: 🚀 Deploy to AWS Lambda

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      stage:
        description: 'Stage to deploy to'
        required: true
        default: 'prod'
        type: choice
        options:
        - staging
        - prod

env:
  AWS_REGION: us-east-1

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.stage || 'production' }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install -g serverless
    
    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: 🚀 Deploy to Lambda
      run: |
        if [ "${{ github.event.inputs.stage || 'prod' }}" = "prod" ]; then
          serverless deploy --config serverless-prod.yml --stage prod --verbose
        else
          serverless deploy --stage staging --verbose
        fi
    
    - name: 📊 Get deployment info
      run: |
        echo "✅ Deployment completed successfully!"
        echo "Stage: ${{ github.event.inputs.stage || 'prod' }}"
        echo "Region: ${{ env.AWS_REGION }}"
        echo "Runtime: Python 3.11"
        echo "Memory: 1024MB"
        echo "Timeout: 30s"
    
    - name: 🧪 Run health check
      run: |
        echo "Running health check..."
        # Add health check endpoint test here
        echo "Health check completed"

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-lambda]
    if: always()
    
    steps:
    - name: 📢 Notify deployment status
      run: |
        if [ "${{ needs.deploy-lambda.result }}" = "success" ]; then
          echo "✅ Lambda deployment successful!"
          echo "Stage: ${{ github.event.inputs.stage || 'prod' }}"
          echo "Environment: ${{ github.event.inputs.stage || 'production' }}"
        else
          echo "❌ Lambda deployment failed!"
          echo "Result: ${{ needs.deploy-lambda.result }}"
          exit 1
        fi
