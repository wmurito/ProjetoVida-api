name: ☁️ Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  AWS_REGION: us-east-1

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install serverless
    
    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: 🚀 Deploy backend with Serverless
      run: |
        if [ "${{ github.event.inputs.environment || 'production' }}" = "production" ]; then
          serverless deploy --stage prod
        else
          serverless deploy --stage staging
        fi
    
    - name: 📊 Get deployment info
      run: |
        echo "Backend deployed successfully!"
        echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
        echo "Region: ${{ env.AWS_REGION }}"

  deploy-frontend:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'ProjetoVida-ui/package-lock.json'
    
    - name: 📦 Install dependencies
      working-directory: ./ProjetoVida-ui
      run: npm ci
    
    - name: 🏗️ Build application
      working-directory: ./ProjetoVida-ui
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_AWS_REGION: ${{ secrets.VITE_AWS_REGION }}
        VITE_USER_POOL_ID: ${{ secrets.VITE_USER_POOL_ID }}
        VITE_USER_POOL_CLIENT_ID: ${{ secrets.VITE_USER_POOL_CLIENT_ID }}
    
    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: 🚀 Deploy to S3
      run: |
        if [ "${{ github.event.inputs.environment || 'production' }}" = "production" ]; then
          aws s3 sync ProjetoVida-ui/dist/ s3://${{ secrets.S3_BUCKET_PROD }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }} --paths "/*"
        else
          aws s3 sync ProjetoVida-ui/dist/ s3://${{ secrets.S3_BUCKET_STAGING }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_STAGING }} --paths "/*"
        fi
    
    - name: 📊 Get deployment info
      run: |
        echo "Frontend deployed successfully!"
        echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
        echo "Region: ${{ env.AWS_REGION }}"

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
    - name: 📢 Notify deployment status
      run: |
        if [ "${{ needs.deploy-backend.result }}" = "success" ] && [ "${{ needs.deploy-frontend.result }}" = "success" ]; then
          echo "✅ Deployment successful!"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
        else
          echo "❌ Deployment failed!"
          echo "Backend: ${{ needs.deploy-backend.result }}"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"
          exit 1
        fi
