# exportar.py
import pandas as pd
from sqlalchemy import create_engine
from dotenv import load_dotenv
import os
import datetime

# Carrega vari√°veis de ambiente (para DB_URL)
load_dotenv()

DB_URL = os.getenv('DATABASE_URL')
# Define um diret√≥rio para salvar os arquivos Excel gerados temporariamente
EXPORT_DIR = os.getenv('EXPORT_DIR', 'temp_exports') 

def gerar_relatorio_pacientes_excel():
    """
    Busca todos os dados dos pacientes, junta as tabelas e gera um arquivo Excel.
    Retorna o caminho do arquivo gerado ou None em caso de erro.
    """
    if not DB_URL:
        print("ERRO: Vari√°vel de ambiente DB_URL n√£o definida.")
        return None

    print("üîó Conectando ao banco de dados para exporta√ß√£o...")
    try:
        engine = create_engine(DB_URL)
    except Exception as e:
        print(f"Erro ao criar engine do banco de dados: {e}")
        return None

    query = """
    SELECT 
        p.paciente_id AS "ID Paciente (Paciente)", 
        p.nome_completo AS "Nome Completo (Paciente)",
        p.idade AS "Idade (Paciente)",
        p.endereco AS "Endere√ßo (Paciente)",
        p.cidade AS "Cidade (Paciente)",
        p.data_nascimento AS "Data Nascimento (Paciente)",
        p.telefone AS "Telefone (Paciente)",
        p.naturalidade AS "Naturalidade (Paciente)",
        p.altura AS "Altura (Paciente)",
        p.peso AS "Peso (Paciente)",
        p.imc AS "IMC (Paciente)",
        p.cor_etnia AS "Cor/Etnia (Paciente)",
        p.escolaridade AS "Escolaridade (Paciente)",
        p.renda_familiar AS "Renda Familiar (Paciente)",

        hp.id AS "ID (Hist. Patol√≥gica)",
        hp.hipertensao AS "Hipertens√£o (Hist. Patol√≥gica)",
        hp.hipotireoidismo AS "Hipotireoidismo (Hist. Patol√≥gica)",
        hp.ansiedade AS "Ansiedade (Hist. Patol√≥gica)",
        hp.depressao AS "Depress√£o (Hist. Patol√≥gica)",
        hp.diabetes AS "Diabetes (Hist. Patol√≥gica)",
        hp.outros AS "Outros (Hist. Patol√≥gica)",

        hf.id AS "ID (Hist. Familiar)",
        hf.cancer_mama AS "C√¢ncer Mama (Hist. Familiar)",
        hf.parentesco_mama AS "Parentesco C√¢ncer Mama (Hist. Familiar)",
        hf.idade_diagnostico_mama AS "Idade Diag. C√¢ncer Mama (Hist. Familiar)",
        hf.cancer_ovario AS "C√¢ncer Ov√°rio (Hist. Familiar)",
        hf.parentesco_ovario AS "Parentesco C√¢ncer Ov√°rio (Hist. Familiar)",
        hf.idade_diagnostico_ovario AS "Idade Diag. C√¢ncer Ov√°rio (Hist. Familiar)",
        hf.outros AS "Outros (Hist. Familiar)",

        hv.id AS "ID (H√°bitos de Vida)",
        hv.tabagismo_carga AS "Carga Tab√°gica (H√°bitos de Vida)",
        hv.tabagismo_tempo_anos AS "Tempo Tabagismo (anos) (H√°bitos de Vida)",
        hv.etilismo_dose_diaria AS "Dose Di√°ria Etilismo (H√°bitos de Vida)",
        hv.etilismo_tempo_anos AS "Tempo Etilismo (anos) (H√°bitos de Vida)",

        pa.id AS "ID (Paridade)",
        pa.gesta AS "Gesta (Paridade)",
        pa.para AS "Para (Paridade)",
        pa.aborto AS "Aborto (Paridade)",
        pa.idade_primeiro_filho AS "Idade Primeiro Filho (Paridade)",
        pa.amamentou AS "Amamentou (Paridade)",
        pa.tempo_amamentacao_meses AS "Tempo Amamenta√ß√£o (meses) (Paridade)",
        pa.menarca_idade AS "Idade Menarca (Paridade)",
        pa.menopausa AS "Menopausa (Paridade)",
        pa.idade_menopausa AS "Idade Menopausa (Paridade)",
        pa.trh_uso AS "Uso TRH (Paridade)",
        pa.tempo_uso_trh AS "Tempo Uso TRH (Paridade)",
        pa.tipo_terapia AS "Tipo Terapia TRH (Paridade)",

        hda.id AS "ID (Hist. Doen√ßa Atual)",
        hda.idade_diagnostico AS "Idade Diagn√≥stico (Hist. Doen√ßa Atual)",
        hda.score_tyrer_cuzick AS "Score Tyrer-Cuzick (Hist. Doen√ßa Atual)",
        hda.score_canrisk AS "Score CanRisk (Hist. Doen√ßa Atual)",
        hda.score_gail AS "Score Gail (Hist. Doen√ßa Atual)",

        hi.id AS "ID (Histologia)",
        hi.subtipo_core_re AS "Subtipo Core RE (Histologia)",
        hi.subtipo_core_rp AS "Subtipo Core RP (Histologia)",
        hi.subtipo_core_her2 AS "Subtipo Core HER2 (Histologia)",
        hi.subtipo_core_ki67 AS "Subtipo Core Ki67 (Histologia)",
        hi.subtipo_cirurgia_re AS "Subtipo Cirurgia RE (Histologia)",
        hi.subtipo_cirurgia_rp AS "Subtipo Cirurgia RP (Histologia)",
        hi.subtipo_cirurgia_her2 AS "Subtipo Cirurgia HER2 (Histologia)",
        hi.subtipo_cirurgia_ki67 AS "Subtipo Cirurgia Ki67 (Histologia)",
        hi.tamanho_tumoral AS "Tamanho Tumoral (cm) (Histologia)",
        hi.grau_tumoral_cirurgia AS "Grau Tumoral Cirurgia (Histologia)",
        hi.margens_comprometidas AS "Margens Comprometidas (Histologia)",
        hi.margens_local AS "Local Margens Comprometidas (Histologia)",
        hi.biopsia_linfonodo_sentinela AS "Bi√≥psia Linfonodo Sentinela (Histologia)",
        hi.bls_numerador AS "BLS Numerador (Histologia)",
        hi.bls_denominador AS "BLS Denominador (Histologia)",
        hi.linfadenectomia_axilar AS "Linfadenectomia Axilar (Histologia)",
        hi.ea_numerador AS "EA Numerador (Histologia)",
        hi.ea_denominador AS "EA Denominador (Histologia)",

        t.id AS "ID (Tratamento)",
        t.tratamento_neoadjuvante AS "Tratamento Neoadjuvante (Tratamento)",
        t.inicio_neoadjuvante AS "In√≠cio Neoadjuvante (Tratamento)",
        t.termino_neoadjuvante AS "T√©rmino Neoadjuvante (Tratamento)",
        t.qual_neoadjuvante AS "Qual Neoadjuvante (Tratamento)",
        t.estagio_clinico_pre_qxt AS "Est√°gio Cl√≠nico Pr√©-QXT (Tratamento)",
        t.imunoterapia AS "Imunoterapia (Tratamento)",
        t.adjuvancia AS "Adjuv√¢ncia (Tratamento)",
        t.quimioterapia AS "Quimioterapia (Tratamento)",
        t.inicio_quimioterapia AS "In√≠cio Quimioterapia (Tratamento)",
        t.fim_quimioterapia AS "Fim Quimioterapia (Tratamento)",
        t.radioterapia_tipo AS "Tipo Radioterapia (Tratamento)",
        t.radioterapia_sessoes AS "Sess√µes Radioterapia (Tratamento)",
        t.inicio_radioterapia AS "In√≠cio Radioterapia (Tratamento)",
        t.fim_radioterapia AS "Fim Radioterapia (Tratamento)",
        t.endocrinoterapia AS "Endocrinoterapia (Tratamento)",
        t.inicio_endocrino AS "In√≠cio Endocrinoterapia (Tratamento)",
        t.fim_endocrino AS "Fim Endocrinoterapia (Tratamento)",
        t.terapia_alvo AS "Terapia Alvo (Tratamento)",
        t.inicio_terapia_alvo AS "In√≠cio Terapia Alvo (Tratamento)",
        t.fim_terapia_alvo AS "Fim Terapia Alvo (Tratamento)",

        d.id AS "ID (Desfecho)",
        d.morte AS "Morte (Desfecho)",
        d.data_morte AS "Data Morte (Desfecho)",
        d.causa_morte AS "Causa Morte (Desfecho)",
        d.metastase AS "Met√°stase (Desfecho)",
        d.data_metastase AS "Data Met√°stase (Desfecho)",
        d.local_metastase AS "Local Met√°stase (Desfecho)",
        d.recidiva_local AS "Recidiva Local (Desfecho)",
        d.data_recidiva_local AS "Data Recidiva Local (Desfecho)",
        d.recidiva_regional AS "Recidiva Regional (Desfecho)",
        d.data_recidiva_regional AS "Data Recidiva Regional (Desfecho)",
        d.sitio_recidiva_regional AS "S√≠tio Recidiva Regional (Desfecho)",

        td.id AS "ID (Tempos Diag.)",
        td.data_mamografia AS "Data Mamografia (Tempos Diag.)",
        td.data_usg AS "Data USG (Tempos Diag.)",
        td.data_rm AS "Data RM (Tempos Diag.)",
        td.data_primeira_consulta AS "Data Primeira Consulta (Tempos Diag.)",
        td.data_core_biopsy AS "Data Core Biopsy (Tempos Diag.)",
        td.data_cirurgia AS "Data Cirurgia (Tempos Diag.)"
    FROM 
        masto.paciente p
    LEFT JOIN masto.historia_patologica hp ON hp.paciente_id = p.paciente_id
    LEFT JOIN masto.historia_familiar hf ON hf.paciente_id = p.paciente_id
    LEFT JOIN masto.habitos_de_vida hv ON hv.paciente_id = p.paciente_id
    LEFT JOIN masto.paridade pa ON pa.paciente_id = p.paciente_id
    LEFT JOIN masto.historia_doenca_atual hda ON hda.paciente_id = p.paciente_id
    LEFT JOIN masto.histologia hi ON hi.paciente_id = p.paciente_id
    LEFT JOIN masto.tratamento t ON t.paciente_id = p.paciente_id
    LEFT JOIN masto.desfecho d ON d.paciente_id = p.paciente_id
    LEFT JOIN masto.tempos_diagnostico td ON td.paciente_id = p.paciente_id
    ORDER BY p.paciente_id;
    """
    
    print("üîÑ Executando a query para buscar dados completos dos pacientes...")
    try:
        with engine.connect() as connection:
            df = pd.read_sql_query(query, connection)
    except Exception as e:
        print(f"Erro ao executar a query: {e}")
        return None
    
    if df.empty:
        print("‚ÑπÔ∏è Nenhum dado encontrado para exportar.")
        # Voc√™ pode optar por retornar um arquivo vazio ou None
        # Para este exemplo, retornaremos None se n√£o houver dados
        return None

    # Remover colunas duplicadas de 'paciente_id' e 'id' das tabelas juntadas, se desejar
    # O alias na query j√° ajuda a diferenci√°-los, mas o pandas pode n√£o gostar de nomes de colunas id√™nticos se n√£o tiver alias
    # No entanto, com os alias na query como "ID (Tabela)", eles j√° s√£o √∫nicos.

    # Criar o diret√≥rio de exporta√ß√£o se n√£o existir
    os.makedirs(EXPORT_DIR, exist_ok=True)
    
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"relatorio_completo_pacientes_{timestamp}.xlsx"
    filepath = os.path.join(EXPORT_DIR, filename)
    
    print(f"üíæ Gerando arquivo Excel em: {filepath}")
    try:
        df.to_excel(filepath, index=False, engine='openpyxl')
        print(f"‚úÖ Arquivo Excel gerado com sucesso: {filepath}")
        return filepath
    except Exception as e:
        print(f"Erro ao salvar o arquivo Excel: {e}")
        return None

if __name__ == '__main__':
    # Este bloco √© para teste local do script
    print("--- Iniciando Teste de Exporta√ß√£o ---")
    caminho_do_arquivo_gerado = gerar_relatorio_pacientes_excel()
    if caminho_do_arquivo_gerado:
        print(f"Arquivo de teste gerado em: {caminho_do_arquivo_gerado}")
    else:
        print("Falha ao gerar o arquivo de teste.")
    print("--- Teste de Exporta√ß√£o Conclu√≠do ---")